msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-11-11 14:47+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: styleguide.xsl:31(SCRIPT)
msgid "function GetElementsByName(name) { // Workaround a bug on old versions of opera. if (document.getElementsByName) { return document.getElementsByName(name); } else { return [document.getElementById(name)]; } } /** * @param {string} namePrefix The prefix of the body name. * @param {function(boolean): boolean} getVisibility Computes the new * visibility state, given the current one. */ function ChangeVisibility(namePrefix, getVisibility) { var bodyName = namePrefix + '<value-of select=\"$body_suffix\"/>'; var buttonName = namePrefix + '<value-of select=\"$button_suffix\"/>'; var bodyElements = GetElementsByName(bodyName); var linkElement = GetElementsByName('link-' + buttonName)[0]; if (bodyElements.length != 1) { throw Error('ShowHideByName() got the wrong number of bodyElements: ' + bodyElements.length); } else { var bodyElement = bodyElements[0]; var buttonElement = GetElementsByName(buttonName)[0]; var isVisible = bodyElement.style.display != \"none\"; if (getVisibility(isVisible)) { bodyElement.style.display = \"inline\"; linkElement.style.display = \"block\"; buttonElement.innerHTML = '<value-of select=\"$hide_button_text\"/>'; } else { bodyElement.style.display = \"none\"; linkElement.style.display = \"none\"; buttonElement.innerHTML = '<value-of select=\"$show_button_text\"/>'; } } } function ShowHideByName(namePrefix) { ChangeVisibility(namePrefix, function(old) { return !old; }); } function ShowByName(namePrefix) { ChangeVisibility(namePrefix, function() { return true; }); } function ShowHideAll() { var allButton = GetElementsByName(\"show_hide_all_button\")[0]; if (allButton.innerHTML == '<value-of select=\"$hide_button_text\"/>') { allButton.innerHTML = '<value-of select=\"$show_button_text\"/>'; SetHiddenState(document.getElementsByTagName(\"body\")[0].childNodes, \"none\", '<value-of select=\"$show_button_text\"/>'); } else { allButton.innerHTML = '<value-of select=\"$hide_button_text\"/>'; SetHiddenState(document.getElementsByTagName(\"body\")[0].childNodes, \"inline\", '<value-of select=\"$hide_button_text\"/>'); } } // Recursively sets state of all children // of a particular node. function SetHiddenState(root, newState, newButton) { for (var i = 0; i != root.length; i++) { SetHiddenState(root[i].childNodes, newState, newButton); if (root[i].className == 'showhide_button') { root[i].innerHTML = newButton; } if (root[i].className == 'stylepoint_body' || root[i].className == 'link_button') { root[i].style.display = newState; } } } function EndsWith(str, suffix) { var l = str.length - suffix.length; return l &gt;= 0 &amp;&amp; str.indexOf(suffix, l) == l; } function RefreshVisibilityFromHashParam() { var hashRegexp = new RegExp('#([^&amp;#]*)$'); var hashMatch = hashRegexp.exec(window.location.href); var anchor = hashMatch &amp;&amp; GetElementsByName(hashMatch[1])[0]; var node = anchor; var suffix = '<value-of select=\"$body_suffix\"/>'; while (node) { var id = node.id; var matched = id &amp;&amp; EndsWith(id, suffix); if (matched) { var len = id.length - suffix.length; ShowByName(matched.substring(0, len)); if (anchor.scrollIntoView) { anchor.scrollIntoView(); } return; } node = node.parentNode; } } window.onhashchange = RefreshVisibilityFromHashParam; window.onload = function() { // if the URL contains \"?showall=y\", expand the details of all children var showHideAllRegex = new RegExp(\"[\\\\?&amp;](showall)=([^&amp;#]*)\"); var showHideAllValue = showHideAllRegex.exec(window.location.href); if (showHideAllValue != null) { if (showHideAllValue[2] == \"y\") { SetHiddenState(document.getElementsByTagName(\"body\")[0].childNodes, \"inline\", '<value-of select=\"$hide_button_text\"/>'); } else { SetHiddenState(document.getElementsByTagName(\"body\")[0].childNodes, \"none\", '<value-of select=\"$show_button_text\"/>'); } } var showOneRegex = new RegExp(\"[\\\\?&amp;](showone)=([^&amp;#]*)\"); var showOneValue = showOneRegex.exec(window.location.href); if (showOneValue) { ShowHideByName(showOneValue[2]); } RefreshVisibilityFromHashParam(); }"
msgstr ""

#: styleguide.xsl:178(P)
msgid "Each style point has a summary for which additional information is available by toggling the accompanying arrow button that looks this way: <SPAN class=\"showhide_button\" style=\"margin-left: 0; float: none\"><value-of select=\"$show_button_text\"/></SPAN>. You may toggle all summaries with the big arrow button:"
msgstr ""

#: styleguide.xsl:185(DIV)
msgid "<SPAN class=\"showhide_button\" style=\"font-size: 180%; float: none\"><attribute name=\"onclick\"><value-of select=\"'javascript:ShowHideAll()'\"/></attribute><attribute name=\"name\"><value-of select=\"$show_hide_all_button\"/></attribute><attribute name=\"id\"><value-of select=\"$show_hide_all_button\"/></attribute><value-of select=\"$button_text\"/></SPAN> Toggle all summaries"
msgstr ""

#: styleguide.xsl:202(H2)
msgid "Parting Words"
msgstr ""

#: styleguide.xsl:252(text)
msgid "javascript:ShowHideByName('"
msgstr ""

#: styleguide.xsl:254(text)
msgid "')"
msgstr ""

#: styleguide.xsl:258(attribute)
msgid "?showone=<value-of select=\"$stylepoint_name\"/>#<value-of select=\"$stylepoint_name\"/>"
msgstr ""

#: styleguide.xsl:257(A)
msgid "<placeholder-1/> link"
msgstr ""

#: styleguide.xsl:291(when)
msgid "display: inline"
msgstr ""

#: styleguide.xsl:292(otherwise)
msgid "display: none"
msgstr ""

#: styleguide.xsl:303(SPAN)
msgid "Definition:"
msgstr ""

#: styleguide.xsl:311(SPAN)
msgid "Pros:"
msgstr ""

#: styleguide.xsl:319(SPAN)
msgid "Cons:"
msgstr ""

#: styleguide.xsl:327(SPAN)
msgid "Decision:"
msgstr ""

#: styleguide.xsl:335(DIV)
msgid "TODO: <apply-templates/>"
msgstr ""

#: styleguide.xsl:436(DIV)
msgid "Table of Contents"
msgstr ""

#: styleguide.xsl:445(text) styleguide.xsl:460(text)
msgid "#"
msgstr ""

#: styleguide.xsl:908(text)
msgid "_"
msgstr ""

#. Put one translator per line, in the form of NAME <EMAIL>, YEAR1, YEAR2
#: styleguide.xsl:0(None)
msgid "translator-credits"
msgstr ""

